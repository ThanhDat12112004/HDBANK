service: serverless-crud-python-demo

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.9
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  environment:
    STAGE: ${self:provider.stage}
  iamRoleStatements:
    # Quyền cho SES
    - Effect: Allow
      Action:
        - ses:SendEmail
        - ses:SendTemplatedEmail
        - ses:SendRawEmail
        - ses:GetSendQuota
        - ses:GetSendStatistics
        - ses:ListVerifiedEmailAddresses
        - ses:ListTemplates
      Resource: "*"
    # Quyền cho CloudWatch Logs
    - Effect: Allow
      Action:
        - logs:CreateLogGroup
        - logs:CreateLogStream
        - logs:PutLogEvents
      Resource: "*"

plugins:
  - serverless-python-requirements
  - serverless-offline

functions:
  # CRUD Functions
  createItem:
    handler: src/handlers/items.create
    events:
      - http:
          path: /items
          method: post
          cors: true

  getItem:
    handler: src/handlers/items.get
    events:
      - http:
          path: /items/{id}
          method: get
          cors: true

  listItems:
    handler: src/handlers/items.list_items
    events:
      - http:
          path: /items
          method: get
          cors: true

  updateItem:
    handler: src/handlers/items.update
    events:
      - http:
          path: /items/{id}
          method: put
          cors: true

  deleteItem:
    handler: src/handlers/items.delete
    events:
      - http:
          path: /items/{id}
          method: delete
          cors: true

  # Email Functions
  sendEmail:
    handler: src/handlers/email.send_email
    timeout: 30
    events:
      - http:
          path: /email/send
          method: post
          cors: true

  sendTemplateEmail:
    handler: src/handlers/email.send_template_email
    timeout: 30
    events:
      - http:
          path: /email/send-template
          method: post
          cors: true

  getSendQuota:
    handler: src/handlers/email.get_send_quota
    events:
      - http:
          path: /email/quota
          method: get
          cors: true

  getSendStatistics:
    handler: src/handlers/email.get_send_statistics
    events:
      - http:
          path: /email/statistics
          method: get
          cors: true

custom:
  pythonRequirements:
    dockerizePip: false
  serverless-offline:
    httpPort: 3000
    host: 0.0.0.0
    apiKey: false

resources:
  Resources:
    EmailConfigurationSet:
      Type: AWS::SES::ConfigurationSet
      Properties:
        Name: ${self:service}-${self:provider.stage}-config-set
