# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wJuc0Td0b7Dtuair0635tDJRtvCIclRH
"""

# Tạo file CSV mẫu
data = """name,age,class,time
Trần Thúy An, 21,   10,   1
Trần Nguyễn Bách Hợp, 21,   11,   1
       Huỳnh Mỹ Linh, 22,   11,   1
       Trần Bảo Trân, 20,   11,   5
   Sơn Thị Vĩnh Xuân, 22,   15,   1
             Như Anh, 19,   15,   0
       Ngô Ngọc Trân, 21,   12,   1
   Võ Thị Cẩm Tiên, 19,   15,   5
   Nguyễn Huyền Châm, 20,   12,  25
"""
with open('/content/sample_data.csv', 'w') as f:
    f.write(data)

# Kiểm tra file đã được tạo
!ls /content

from pyspark.sql import SparkSession
from pyspark.sql.types import StructType, StructField, StringType, IntegerType
from pyspark.sql.functions import desc

spark = SparkSession.builder.appName("DuongThanhDat").getOrCreate()

df = spark.read.option("header", True).option("inferSchema", True).csv("/content/sample_data.csv")

df = spark.read.csv("/content/sample_data.csv")

df.show()

# Kiểm tra file
!ls /content/employee_data.csv

# Nếu file không tồn tại, tạo file mẫu
data = """employee_id,employee_name,department,salary
101,John,Finance,50000
102,Jane,IT,60000
103,Mike,HR,45000
"""
with open('/content/employee_data.csv', 'w') as f:
    f.write(data)

# Kiểm tra lại file sau khi tạo
!ls /content

spark = SparkSession.builder.appName("Ahihi").getOrCreate()
# Dữ liệu mẫu
data = [("Trần Thúy An", 21, 10), ("Huỳnh Mỹ Linh", 22, 11), ("Trần Nguyễn Bách Hợp", 21, 11),("Trần Bảo Trân", 20, 11),("Ngô Ngọc Trân", 21, 12),("Nguyễn Huyền Châm", 20, 12),("Võ Thị Cẩm Tiên",19, 15),("Sơn Thị Vĩnh Xuân",22,15),("Như Anh",19,15)]
schema = StructType([
    StructField("Name", StringType(),True),
    StructField("Age", IntegerType(),True),
    StructField("Class", IntegerType(),True),

])
df = spark.createDataFrame(data,schema)
df.show()

# Ghi DataFrame thành file Parquet
df.write.parquet("/content/data.parquet")

# Kiểm tra file đã được tạo
!ls /content/data.parquet

df2 = spark.read.parquet("/content/data.parquet")
df2.show()

# Tải driver PostgreSQL
!wget https://jdbc.postgresql.org/download/postgresql-42.7.4.jar -P /content/

from pyspark.sql import SparkSession

# Khởi tạo SparkSession với driver PostgreSQL
spark = SparkSession.builder \
    .appName("JDBCExample") \
    .config("spark.driver.extraClassPath", "/content/postgresql-42.7.4.jar") \
    .getOrCreate()

# Đọc từ cơ sở dữ liệu PostgreSQL
df = spark.read \
    .format("jdbc") \
    .option("url", "jdbc:postgresql://<host>:<port>/<database>") \
    .option("dbtable", "schema.table_name") \
    .option("user", "your_username") \
    .option("password", "your_password") \
    .option("driver", "org.postgresql.Driver") \
    .load()

# Hiển thị dữ liệu
df.show()

# Tải driver PostgreSQL
!wget https://jdbc.postgresql.org/download/postgresql-42.7.4.jar -P /content/

# Kiểm tra file đã tải chưa
!ls /content

from pyspark.sql import SparkSession

# Dừng SparkSession hiện tại (nếu đang chạy)
spark.stop()

# Khởi tạo lại SparkSession với driver PostgreSQL
spark = SparkSession.builder \
    .appName("JDBCExample") \
    .config("spark.driver.extraClassPath", "/content/postgresql-42.7.4.jar") \
    .config("spark.executor.extraClassPath", "/content/postgresql-42.7.4.jar") \
    .getOrCreate()

df = spark.read \
    .format("jdbc") \
    .option("url", "jdbc:postgresql://10.0.106.104:5432/QuanLySinhvien") \
    .option("user", "postgres") \
    .option("password", "admin") \
    .option("driver", "org.postgresql.Driver") \
    .option("dbtable", "public.students") \
    .load()

# Hiển thị dữ liệu
df.show()